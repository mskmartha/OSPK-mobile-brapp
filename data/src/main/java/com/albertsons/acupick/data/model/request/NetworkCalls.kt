package com.albertsons.acupick.data.model.request

import com.squareup.moshi.JsonClass
import com.squareup.moshi.Moshi

@JsonClass(generateAdapter = false)
enum class NetworkCalls(val value: String) {
    NEW_PICKER_ADDED("NEW_PICKER_ADDED"),
    GET_CUSTOMERID_FAILURE("GET_CUSTOMERID_FAILURE"),
    GET_CUSTOMERID_SUCCESS("GET_CUSTOMERID_SUCCESS"),
    ADD_PARTICIPANT_FAILURE("ADD_PARTICIPANT_FAILURE"),
    GET_TWILIO_TOKEN_FAILURE("GET_TWILIO_TOKEN_FAILURE"),
    TWILIO_SDK_INITIALIZATION_FAILURE("TWILIO_SDK_INITIALIZATION_FAILURE"),
    INSERT_AND_UPDATE_FAILURE("INSERT_AND_UPDATE_FAILURE"),
    PICKER_REMOVED_FAILED("PICKER_REMOVED_FAILED"),
    PICKED_WITH_SDK_FAILURE("PICKED_WITH_SDK_FAILURE"),
    FETCH_MESSAGES_1_FAILURE("FETCH_MESSAGES_1_FAILURE"),
    FETCH_MESSAGES_2_FAILURE("FETCH_MESSAGES_2_FAILURE"),
    SUCCESS_SUBSCRIPTION_TO_CHAT("SUCCESS_SUBSCRIPTION_TO_CHAT"),
    CHAT_BUTTON_DISPLAYED("CHAT_BUTTON_DISPLAYED"),
    CUSTOMER_TYPING_DIALOG_DISPLAYED("CUSTOMER_TYPING_DIALOG_DISPLAYED"),
    NO_REPLY_DIALOG_DISPLAYED("NO_REPLY_DIALOG_DISPLAYED"),
    UNREAD_MESSAGE_DIALOG_DISPLAYED("UNREAD_MESSAGE_DIALOG_DISPLAYED"),
    SUBSTITUTION_OSS_BLOCK_TIMER_STARTED("SUBSTITUTION_OSS_BLOCK_TIMER_STARTED"),
    CAMERA_PERMISSION_NOT_PROVIDED("CAMERA_PERMISSION_NOT_PROVIDED"),
    CAMERA_PERMISSION_FEATURE_DISABLED("CAMERA_PERMISSION_FEATURE_DISABLED"),
    CAMERA_UNKNOWN_ERROR("CAMERA_UNKNOWN_ERROR"),
    NOTIFICATION_ERROR("NOTIFICATION_ERROR"),
    NOTIFICATION_SOUND_ERROR("NOTIFICATION_SOUND_ERROR"),
}

@JsonClass(generateAdapter = true)
data class ChatErrorData(
    val orderNumber: String? = null,
    val conversationId: String? = null,
    val errorMessage: String? = null,
    val stagingBlockedTime: Int? = null,
    val conversationSids: List<String>? = null,
    val orderNumbers: List<String>? = null,
) {

    fun toJsonString(moshi: Moshi): String {
        return runCatching { moshi.adapter(ChatErrorData::class.java).toJson(this) }.getOrNull() ?: ""
    }
}
